{"version":3,"sources":["Vendor/TypedReact.js","Sections/Navigation.js","Sections/Intro.js","Sections/About.js","Sections/Contact.js","Sections/Folio.js","Sections/Footer.js","Page.js","serviceWorker.js","index.js"],"names":["TypedReact","options","this","props","typed","Typed","el","destroy","_this","react_default","a","createElement","style","whiteSpace","ref","React","Component","Navigation","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","Navbar","dark","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","Intro","id","Navigation_Navigation","src","alt","TypedReact_TypedReact","strings","typeSpeed","backDelay","backSpeed","About","Container","Row","Col","sm","md","size","offset","target","rel","Contact","lg","Form","name","noValidate","FormGroup","Input","type","placeholder","required","Button","Folio","_ref","sampleWork","map","image","i","key","link","url","title","Footer","fa","color","ti","Page","videoWalkthroughs","Sections_Intro","Sections_About","Sections_Folio","Sections_Contact","Sections_Footer","Boolean","window","location","hostname","match","ReactDOM","render","Page_Page","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.01ec988d.chunk.js","sourcesContent":["import React from 'react'\nimport Typed from 'typed.js'\n\nexport default class TypedReact extends React.Component \n{\n    componentDidMount() \n    {\n        // If you want to pass more options as props, simply add\n      // your desired props to this destructuring assignment.\n      const { options } = this.props;\n\n      // this.el refers to the <span> in the render() method\n      this.typed = new Typed(this.el, options);\n    }\n  \n    componentWillUnmount() \n    {\n      this.typed.destroy();\n    }\n  \n    render() {\n      return (\n            <span\n              style={{ whiteSpace: 'pre' }}\n              ref={(el) => { this.el = el; }}\n            />\n      );\n    }\n  }","import React from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n    } from 'reactstrap';\n\nexport default class Navigation extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n  render() {\n    return (\n      <div>\n        <Navbar dark expand=\"md\">\n          <NavbarBrand href=\"/\">Notabela</NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink href=\"#home\">Home</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"#about\">About</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"#folio\">Folio</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"#contact\">Contact</NavLink>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport TypedReact from '../Vendor/TypedReact'\nimport Navigation from './Navigation'\n\nconst Intro = () => {\n\n    var options = {\n        strings: [\"a programmer...\", \"an engineer?\", \"a coder..?\", \"&lt;code/&gt;\"],\n          typeSpeed: 40,\n          backDelay: 900,\n          backSpeed: 40\n      }\n\n    //var typed = new Typed(\".element\", options);\n    return (\n    <div id=\"home\" className=\"sec-main\">\n        <Navigation/>\n        <img id=\"profile_img\" src=\"assets/daniel.jpg\" alt=\"Daniel\" />>\n        <h1 className=\"main-heading\">I am <TypedReact options={options}/></h1>\n    </div>\n    )\n}\n\nexport default Intro","import React from 'react';\nimport {Container, Row, Col} from 'reactstrap'\n\nconst About = () => {\n    return (\n        <div id=\"about\" className=\"sec-about\">\n            <Container>\n                <h1>A Little about me...</h1>\n                <hr className=\"white-hr\"/>\n                <Row>\n                    <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                        <p className=\"about-text\">Hello I'm Daniel, codename: notabela<br/> \n                        Artist, Developer, Engineer and IT Enthusiast. <br />\n                        My dream is to create a better world with &lt;code/&gt;<br/> <br/>\n                        <a href=\"https://github.com/notabela\" target=\"_blank\" rel=\"noopener noreferrer\">Checkout my latest projects on Github</a><br />\n                        <a href=\"https://bit.ly/2XvmUCk\" target=\"_blank\" rel=\"noopener noreferrer\">Download my resume</a>\n                    </p>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default About","import React from 'react';\nimport {Container, Row, Col, Form, FormGroup, Input, Button} from 'reactstrap'\n\nconst Contact = () => {\n    return (\n        <div id=\"contact\" className=\"sec-contact\">\n            <Container>\n            <h1 className=\"section-heading\">Get in Touch</h1><hr className=\"white-hr\"/>\n            <Row>\n                <Col lg={{ size: 12}}>\n                    <Form id=\"contactForm\" name=\"sentMessage\" noValidate=\"\">\n                        <Row>\n                            <Col md={{ size: 6}}>\n                                <FormGroup>\n                                    <Input type=\"text\" className=\"form-control\" placeholder=\"Your Name\" id=\"name\" required={true}/>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Input type=\"email\" className=\"form-control\" placeholder=\"Your Email Address\" id=\"email\" required={true}/>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Input type=\"tel\" className=\"form-control\" placeholder=\"Your Phone Number\" id=\"phone\" required={false}/>\n                                </FormGroup>\n                            </Col>\n                            <Col md={{ size: 6}}>\n                                <FormGroup>\n                                <textarea className=\"form-control\" placeholder=\"Your Message *\" id=\"message\" required={true} ></textarea>\n                                </FormGroup>\n                            </Col>\n                            <div className=\"clearfix\"></div>\n                            <Col lg={{ size: 12}} className=\"text-center\">\n                                <div id=\"success\"></div>\n                                <Button type=\"submit\" className=\"btn btn-xl\">Send Message</Button>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Col>\n            </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default Contact","import React from 'react';\nimport {Container, Row, Col} from 'reactstrap'\n\nconst Folio = ({sampleWork}) => {\n    return (\n        <div id=\"folio\" className=\"sec-folio\">\n            <Container>\n            <h1>Sample Work</h1><hr className=\"green-hr\"/>\n            <Row>\n                {sampleWork.map( (image, i) => { \n                    return (\n                        <Col key={i} md={{ size: image.size }}>\n                        <a href={image.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                            <img key={i} className=\"center-block\" src={image.url} title='Video Walkthrough' alt='Video Walkthrough' />\n                        </a>\n                        </Col>\n                    )\n                })}\n                </Row>\n            </Container> \n        </div>\n    )\n}\n\nexport default Folio","import React from 'react';\nimport {FaFacebookF, FaLinkedinIn, FaInstagram, FaEnvelope, FaLaptopCode, FaGithub} from 'react-icons/fa'\nimport {TiHeartFullOutline} from \"react-icons/ti\";\nimport {Container, Row, Col} from 'reactstrap'\n\nconst Footer = () => {\n    return (\n        <div id=\"footer\" className=\"sec-footer\">\n            <Container>\n                <Row>\n                    <Col>\n                    <p className=\"text-center light-white-font\">\n                        <a href=\"https://www.facebook.com/notabela\" title=\"Facebook\" target=\"facebook\"><FaFacebookF color=\"#3b5998\"/></a>\n                        &nbsp;&nbsp;&bull;&nbsp;&nbsp;\n                        <a href=\"https://www.linkedin.com/in/daniel-obeng-b22759111\" title=\"Linkedin\" target=\"linkedin\"><FaLinkedinIn color=\"#007bb5\"/></a>\n                        &nbsp;&nbsp;&bull;&nbsp;&nbsp;\n                        <a href=\"https://github.com/notabela\" title=\"Github\" target=\"github\"><FaGithub color=\"#000000\"/></a>\n                        &nbsp;&nbsp;&bull;&nbsp;&nbsp;\n                        <a href=\"https://instragram.com/notabela\" title=\"Instagram\" target=\"instagram\"><FaInstagram color=\"#fb3958\"/></a>\n                        &nbsp;&nbsp;&bull;&nbsp;&nbsp;\n                        <a href=\"mailto:daniobeng@gmail.com\" title=\"My pens\" target=\"Email\"><FaEnvelope color=\"#00bf8f\"/></a>\n                    </p>\n                    </Col>\n                </Row>\n                <Row className=\"text-center small\">\n                    <Col>\n                        <p><FaLaptopCode color='blue'/> with <TiHeartFullOutline color='red'/> by notabela</p>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default Footer","import React, { Component } from 'react';\nimport Intro from './Sections/Intro'\nimport About from './Sections/About'\nimport Contact from './Sections/Contact'\nimport Folio from './Sections/Folio'\nimport Footer from './Sections/Footer'\n\nexport default class Page extends Component\n{\n  constructor(props)\n  {\n    super(props)\n\n    this.state = {\n      videoWalkthroughs: this.props.videoWalkthroughs\n    }\n  }\n\n  render()\n  {\n    return(\n      <div>\n        <Intro/>\n        <About/>\n        <Folio sampleWork={this.state.videoWalkthroughs}/>\n        <Contact/>\n        <Footer />\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport Page from './Page';\nimport * as serviceWorker from './serviceWorker';\n\nconst videoWalkthroughs = [\n    {size: 4, url: 'http://imgur.com/2GXHgHp.gif', link:'https://github.com/Notabela/2048'},\n    {size: 4, url: 'http://i.imgur.com/WDz83Ni.gif', link:'https://github.com/Notabela/belaShare'},\n    {size: 4, url: 'http://i.imgur.com/E5XN9eb.gif', link: 'https://github.com/Notabela/Twitter-Redux'},\n    {size: 12, url: 'https://i.imgur.com/UDdzYi5.gif', link: 'https://github.com/Notabela/Camper-Plus'},\n    {size: 12, url: 'https://i.imgur.com/yqwWSZN.gif', link: 'https://github.com/Notabela/Lie_to_me'},\n]\n\nReactDOM.render(<Page videoWalkthroughs={videoWalkthroughs}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}